PRELIMINARY DATA ANALYSIS
gunzip  Nlemb1.fastq.gz, Nlemb3.fastq.gz, NL1.fastq.gz, LinL1.fastq.gz. (Unzip all raw reads)
gunzip Linlemb1.fastq.gz, Linlemb2.fastq.gz, NL2.fastq.gz, LinL2.fastq.gz (Unzip all raw reads)
gunzip  Nlemb2.fastq.gz, Linlemb3.fastq.gz,  NL3.fastq.gz,  LinL3.fastq.gz (Unzip all raw reads)
fastqc Nlemb1.fastq, Nlemb3.fastq, NL1.fastq, LinL1.fastq. (To quality assess raw reads)
fastqc Linlemb1.fastq, Linlemb2.fastq, NL2.fastq, LinL2.fastq. (To quality assess raw reads)
fastqc Nlemb2.fastq, Linlemb3.fastq,  NL3.fastq,  LinL3.fastq. (To quality assess raw reads)
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/985/GCF_000002985.6_WBcel235/GCF_000002985.6_WBcel235_rna.fna.gz (to download C. elegans reference transcript)
GCF_000002985.6_WBcel235_rna.fna.gz is the Reference transcript
gunzip GCF_000002985.6_WBcel235_rna.fna.gz> Ref_transcript_rna.fna (to unzip the transcript, output file is GCF_000002985.6_WBcel235_rna.fna)
conda activate RNASeq
bowtie2-build Ref_transcript_rna.fna Ref.elegans (Ref_transcript_rna.fna)
bowtie2 -x Ref.elegans Nlemb1.fastq, Nlemb3.fastq, NL1.fastq, LinL1.fastq. -S Nlemb1.sam, Nlemb3.sam, NL1.sam, LinL1.sam. (to map the indexed transcript into raw RNA reads)
bowtie2 -x Ref.elegans Linlemb1.fastq, Linlemb2.fastq, NL2.fastq, LinL2.fastq. -S Linlemb1.sam, Linlemb2.sam, NL2.sam, LinL2.sam. (to map the indexed transcript into raw RNA reads)
bowtie2 -x Ref.elegans Nlemb2.fastq, Linlemb3.fastq,  NL3.fastq,  LinL3.fastq. -S Nlemb2.sam, Linlemb3.sam,  NL3.sam,  LinL3.sam.
(grep -c "K0" *.sam (count the number of mapped reads in all .sam files to the reference transcriptome)
samtools view -b Nlemb1.sam, Nlemb3.sam, NL1.sam, LinL1.sam | samtools sort - > Nlemb1.bam, Nlemb3.bam, NL1.bam, LinL1.bam (To convert sam to .bam file using samtools)
samtools view -b Linlemb1.sam, Linlemb2.sam, NL2.sam, LinL2.sam | samtools sort - > Linlemb1.bam, Linlemb2.bam, NL2.bam, LinL2.bam
samtools view -b Nlemb2.sam, Linlemb3.sam,  NL3.sam,  LinL3.sam. | samtools sort - > Nlemb2.bam, Linlemb3.bam,  NL3.bam,  LinL3.bam.
samtools index Nlemb1.bam, Nlemb3.bam, NL1.bam, LinL1.bam (Index the .bam file)
samtools index Linlemb1.bam, Linlemb2.bam, NL2.bam, LinL2.bam
samtools index Nlemb2.bam, Linlemb3.bam,  NL3.bam,  LinL3.bam.
bcftools mpileup -f Ref_transcript_rna.fna Nlemb1.bam, Nlemb3.bam, NL1.bam, LinL1.bam | bcftools call -mv -Ob --ploidy 1 -o Nlemb1.rawcalls.bcf, Nlemb3.rawcalls.bcf, NL1.rawcalls.bcf, LinL1.rawcalls.bcf
bcftools mpileup -f Ref_transcript_rna.fna Linlemb1.bam, Linlemb2.bam, NL2.bam, LinL2.bam | bcftools call -mv -Ob --ploidy 1 -o Linlemb1.rawcalls.bcf, Linlemb2.rawcalls.bcf, NL2.rawcalls.bcf, LinL2.rawcalls.bcf
bcftools mpileup -f Ref_transcript_rna.fna Nlemb1.bam, Nlemb3.bam, NL1.bam, LinL1.bam | bcftools call -mv -Ob --ploidy 1 -o Nlemb2.rawcalls.bcf, Linlemb3.rawcalls.bcf,  NL3.rawcalls.bcf,  LinL3.rawcalls.bcf
bcftools filter --exclud 'QUAL < 30' Nlemb1.rawcalls.bcf, Nlemb3.rawcalls.bcf, NL1.rawcalls.bcf, LinL1.rawcalls.bcf > Nlemb1.vcf, Nlemb3.vcf, NL1.vcf, LinL1.vcf (to filter the variant calls)
bcftools filter --exclud 'QUAL < 30' Linlemb1.rawcalls.bcf, Linlemb2.rawcalls.bcf, NL2.rawcalls.bcf, LinL2.rawcalls.bcf > Linlemb1.vcf, Linlemb2.vcf, NL2.vcf, LinL2.vcf
bcftools filter --exclud 'QUAL < 30' Nlemb2.rawcalls.bcf, Linlemb3.rawcalls.bcf,  NL3.rawcalls.bcf,  LinL3.rawcalls.bcf > Nlemb2.vcf, Linlemb3.vcf,  NL3.vcf,  LinL3.vcf
grep -c "NR" Nlemb1.vcf, Nlemb3.vcf, NL1.vcf, LinL1.vcf (to count the number of variant calls in the mapped read). 
grep -c "NR" Linlemb1.vcf, Linlemb2.vcf, NL2.vcf, LinL2.vcf
grep -c "NR" Nlemb2.vcf, Linlemb3.vcf,  NL3.vcf,  LinL3.vcf


DIFFERENTIAL EXPRESSION (Using Salmon)
conda config --add channels conda-forge
conda config --add channels bioconda
conda create -n salmon salmon (to get started with Salmon)
conda activate salmon (To activate salmon)
salmon -h (to read if salmon is active)
salmon index -t GCF_000002985.6_WBcel235_rna.fna -i Reference_index (To index reference transcriptome with Salmon)
salmon quant -i Reference_index -l A -r Nlemb1.fastq.gz -o Nlemb1_transcripts_quant (To obtain a counts table using Salmon command "quant")
salmon quant -i Reference_index -l A -r Nlemb3.fastq.gz -o Nlemb3_transcripts_quant
salmon quant -i Reference_index -l A -r NL1.fastq.gz -o NL1_transcripts_quant
salmon quant -i Reference_index -l A -r LinL1.fastq.gz -o LinL1_transcripts_quant
salmon quant -i Reference_index -l A -r Linlemb1.fastq.gz -o Linlemb1_transcripts_quant
salmon quant -i Reference_index -l A -r Linlemb2.fastq.gz -o Linlemb2_transcripts_quant
salmon quant -i Reference_index -l A -r NL2.fastq.gz -o NL2_transcripts_quant
salmon quant -i Reference_index -l A -r LinL2.fastq.gz -o LinL2_transcripts_quant
salmon quant -i Reference_index -l A -r Nlemb2.fastq.gz -o Nlemb2_transcripts_quant
salmon quant -i Reference_index -l A -r Linlemb3.fastq.gz -o Linlemb3_transcripts_quant
salmon quant -i Reference_index -l A -r NL3.fastq.gz -o NL3_transcripts_quant
salmon quant -i Reference_index -l A -r LinL3.fastq.gz -o LinL3_transcripts_quant

DESEQ analysing on R















